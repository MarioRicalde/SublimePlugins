<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>comment</key>
  <string>Borg Syntax</string>
  <key>fileTypes</key>
  <array>
    <string>borg</string>
  </array>
  <key>foldingStartMarker</key>
  <string>^.*\bfunction\s*(\w+\s*)?\([^\)]*\)(\s*\{[^\}]*)?\s*$</string>
  <key>foldingStopMarker</key>
  <string>^\s*\}</string>
  <key>keyEquivalent</key>
  <string>^~B</string>
  <key>name</key>
  <string>Borg</string>
  <key>patterns</key>
  <array>
    <dict>
      <key>match</key>
      <string>\b(template|service|job|task|allocation)\b</string>
      <key>name</key>
      <string>support.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\b(import|as)\b</string>
      <key>name</key>
      <string>storage.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?)(M|G|K)?)\b</string>
      <key>name</key>
      <string>constant.numeric.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>([a-zA-Z0-9_\-]+)\s*(\{)</string>
      <key>name</key>
      <string>tuple.borg</string>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>storage.type.function.borg</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>meta.brace.curly.borg</string>
        </dict>
      </dict>
    </dict>
    <dict>
      <key>match</key>
      <string>^\s*([a-zA-Z0-9_\-]+)\s*(=)</string>
      <key>name</key>
      <string>assignment.blarg.borg</string>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>assignment.lvalue.blarg.borg</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.borg</string>
        </dict>
      </dict>
    </dict>
    <dict>
      <key>begin</key>
      <string>'</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.begin.borg</string>
        </dict>
      </dict>
      <key>end</key>
      <string>'</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.end.borg</string>
        </dict>
      </dict>
      <key>name</key>
      <string>string.quoted.single.borg</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
          <key>name</key>
          <string>constant.character.escape.borg</string>
        </dict>
      </array>
    </dict>
    <dict>
      <key>begin</key>
      <string>"</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.begin.borg</string>
        </dict>
      </dict>
      <key>end</key>
      <string>"</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.end.borg</string>
        </dict>
      </dict>
      <key>name</key>
      <string>string.quoted.double.borg</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
          <key>name</key>
          <string>constant.character.escape.borg</string>
        </dict>
      </array>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.comment.borg</string>
        </dict>
      </dict>
      <key>match</key>
      <string>(//).*$\n?</string>
      <key>name</key>
      <string>comment.line.double-slash.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\b(boolean|byte|char|class|double|enum|float|function|int|interface|long|short|var|void)\b</string>
      <key>name</key>
      <string>storage.type.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\btrue\b</string>
      <key>name</key>
      <string>constant.language.boolean.true.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\bfalse\b</string>
      <key>name</key>
      <string>constant.language.boolean.false.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\bnull\b</string>
      <key>name</key>
      <string>constant.language.null.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\b(super|this|parent)\b</string>
      <key>name</key>
      <string>variable.language.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\b(cond|len|(is_(bool|float|int|lambda|list|map|null|string|tuple))|int|float|tostring|strptime|join|split|substr|match|replace|tolower|toupper|stringhash|fingerprint|utf8len|fmt|defined|defined_expr|eval|eval_expr|objtype|get_objects|expid|getenv|walltime|strftime|real_username|basename|filedir|getcwd|myfilename|listdir|glob|isdir|isfile|commonprefix|map|filter|reduce|flatten|head|tail|sort_asc|sort_dsc|lookup|get|has_key|keys|attributes|values|items|mkmap|mktuple|maptuple|username|real_username|objectname|package_dir|get_mpm_version|packagename|file_checksum|mkargs|mkpath_exports|mk_evtra_argv|shellescape|get_binary|format_shardinfo|format_backends|get_task_name|get_job_bns_prefix|get_num_tasks|get_babysitter_tasks|chroot_pb_str|pb_fetch_args|max|min|join_non_empty|slice|indexes|match_indexes|select|reverse|concat|unzip|enumerate|qsort|cmp|sort|uniq|lmap|lfilter|lcond|best|optimize|curry|uncurry|compose2|compose)\b(?=\()</string>
      <key>name</key>
      <string>support.function.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>!|\$|%|&amp;|\*|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=|\b(in|instanceof|new|delete|typeof|void)\b</string>
      <key>name</key>
      <string>keyword.operator.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>,[ |\t]*</string>
      <key>name</key>
      <string>meta.delimiter.object.comma.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\.</string>
      <key>name</key>
      <string>meta.delimiter.method.period.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\{|\}</string>
      <key>name</key>
      <string>meta.brace.curly.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\(|\)</string>
      <key>name</key>
      <string>meta.brace.round.borg</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\[|\]</string>
      <key>name</key>
      <string>meta.brace.square.borg</string>
    </dict>
  </array>
  <key>scopeName</key>
  <string>source.borg</string>
</dict>
</plist>
